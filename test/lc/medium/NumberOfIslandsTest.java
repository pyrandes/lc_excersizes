package lc.medium;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class NumberOfIslandsTest {

  NumberOfIslands n;
  
  @BeforeEach
  void setUp() throws Exception {
    n = new NumberOfIslands();
  }

  @Test
  void test() {
    char[][] grid = {
        {'1','1','1','1','0'},
        {'1','1','0','1','0'},
        {'1','1','0','0','0'},
        {'0','0','0','0','0'}
    };
    
    assertEquals(1, n.numIslands(grid));
  }

  
  @Test
  void test1() {
    char[][] grid = {
        {'1','1','0','0','0'},
        {'1','1','0','0','0'},
        {'0','0','1','0','0'},
        {'0','0','0','1','1'}
    };
    
    assertEquals(3, n.numIslands(grid));
  }
  
  @Test
  void test2() {
    char[][] grid = {
        {'1','0','0','1','1'},
        {'0','1','1','0','0'},
        {'0','1','1','0','1'},
        {'1','0','0','1','0'}
    };
    
    assertEquals(6, n.numIslands(grid));
  }
  
  @Test
  void test3() {
    char[][] grid = {
        {'1','0','0','1','1','1','0','1','1','0','0','0','0','0','0','0','0','0','0','0'},
        {'1','0','0','1','1','0','0','1','0','0','0','1','0','1','0','1','0','0','1','0'},
        {'0','0','0','1','1','1','1','0','1','0','1','1','0','0','0','0','1','0','1','0'},
        {'0','0','0','1','1','0','0','1','0','0','0','1','1','1','0','0','1','0','0','1'},
        {'0','0','0','0','0','0','0','1','1','1','0','0','0','0','0','0','0','0','0','0'},
        {'1','0','0','0','0','1','0','1','0','1','1','0','0','0','0','0','0','1','0','1'},
        {'0','0','0','1','0','0','0','1','0','1','0','1','0','1','0','1','0','1','0','1'},
        {'0','0','0','1','0','1','0','0','1','1','0','1','0','1','1','0','1','1','1','0'},
        {'0','0','0','0','1','0','0','1','1','0','0','0','0','1','0','0','0','1','0','1'},
        {'0','0','1','0','0','1','0','0','0','0','0','1','0','0','1','0','0','0','1','0'},
        {'1','0','0','1','0','0','0','0','0','0','0','1','0','0','1','0','1','0','1','0'},
        {'0','1','0','0','0','1','0','1','0','1','1','0','1','1','1','0','1','1','0','0'},
        {'1','1','0','1','0','0','0','0','1','0','0','0','0','0','0','1','0','0','0','1'},
        {'0','1','0','0','1','1','1','0','0','0','1','1','1','1','1','0','1','0','0','0'},
        {'0','0','1','1','1','0','0','0','1','1','0','0','0','1','0','1','0','0','0','0'},
        {'1','0','0','1','0','1','0','0','0','0','1','0','0','0','1','0','1','0','1','1'},
        {'1','0','1','0','0','0','0','0','0','1','0','0','0','1','0','1','0','0','0','0'},
        {'0','1','1','0','0','0','1','1','1','0','1','0','1','0','1','1','1','1','0','0'},
        {'0','1','0','0','0','0','1','1','0','0','1','0','1','0','0','1','0','0','1','1'},
        {'0','0','0','0','0','0','1','1','1','1','0','1','0','0','0','1','1','0','0','0'}
    };
    
    assertEquals(58, n.numIslands(grid));
  }
  
  @Test
  void test4() {
    char[][] grid = {
        {'1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','0','1','0','1','1'},
        {'0','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','0'},
        {'1','0','1','1','1','0','0','1','1','0','1','1','1','1','1','1','1','1','1','1'},
        {'1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
        {'1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
        {'1','0','1','1','1','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1'},
        {'0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','1','1'},
        {'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','1','1'},
        {'1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1'},
        {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
        {'0','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1'},
        {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
        {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
        {'1','1','1','1','1','0','1','1','1','1','1','1','1','0','1','1','1','1','1','1'},
        {'1','0','1','1','1','1','1','0','1','1','1','0','1','1','1','1','0','1','1','1'},
        {'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','0'},
        {'1','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','0'},
        {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
        {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},
        {'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}
    };
    
    assertEquals(1, n.numIslands(grid));
  }
}
